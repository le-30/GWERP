<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="employee.model.Employee">

	<select id="getAllEmployee"
		resultType="employee.model.EmployeeBean">
		select
		e.emp_no
		,e.emp_nm
		,e.emp_status
		,(select c.cmm_nm from cmm_code c
		where c.cmm_class='EMP_STATUS' and c.cmm_cd
		= e.emp_status) as
		emp_status_nm
		,e.dept_cd
		,(select d.dept_nm from department d where
		d.dept_cd = e.dept_cd) as dept_nm
		,e.position_cd
		,(select c.cmm_nm from
		cmm_code c where c.cmm_class = 'POSITION_CD' and
		c.cmm_cd =
		e.position_cd) as position_nm
		,e.hire_date
		,e.gender
		,(select c.cmm_nm
		from cmm_code c where c.cmm_class='GENDER' and c.cmm_cd =
		e.gender) as
		gender_nm
		,e.birth
		,e.email
		from employee e
		<if test="whatColumn == 'emp_nm'">
			where e.emp_nm like #{keyword}
		</if>
		<if test="whatColumn == 'emp_no'">
			where e.emp_no like #{keyword}
		</if>
		order by e.emp_no
	</select>

	<select id="getAllEmployeeList"
		resultType="employee.model.EmployeeBean">
		select
		e.emp_no
		,e.emp_nm
		,e.emp_status
		,(select c.cmm_nm from
		cmm_code c where c.cmm_class='EMP_STATUS' and c.cmm_cd
		= e.emp_status)
		as emp_status_nm
		,e.dept_cd
		,(select d.dept_nm from department d where
		d.dept_cd = e.dept_cd) as dept_nm
		,e.position_cd
		,(select c.cmm_nm from
		cmm_code c where c.cmm_class = 'POSITION_CD' and
		c.cmm_cd =
		e.position_cd) as position_nm
		,e.hire_date
		,e.gender
		,(select c.cmm_nm
		from cmm_code c where c.cmm_class='GENDER' and c.cmm_cd =
		e.gender) as
		gender_nm
		,e.birth
		,e.email
		from employee e
		order by hire_date
	</select>

	<insert id="insertEmployee">
		insert into
		employee(emp_no,emp_nm,dept_cd,position_cd,hire_date,gender,birth,email,pw)
		values(#{emp_no},#{emp_nm},#{dept_cd},#{position_cd},#{hire_date},#{gender},#{birth},#{email},#{pw})
	</insert>

	<select id="getEmployeeInfo"
		parameterType="employee.model.EmployeeBean"
		resultType="employee.model.EmployeeBean">
		select
		e.emp_no
		,e.emp_nm
		,e.pw
		,e.dept_cd
		,(select d.dept_nm
		from department d where d.dept_cd = e.dept_cd) as dept_nm
		,e.position_cd
		,(select c.cmm_nm from cmm_code c where c.cmm_class =
		'POSITION_CD' and
		c.cmm_cd = e.position_cd) as position_nm
		from employee
		e
		where e.emp_no = #{emp_no}
		and e.pw = #{pw}
	</select>

	
	<select id="getAllEmployeeAuth" resultType="employee.model.EmployeeBean">
		SELECT 
   		 	  e.emp_no
   			 ,e.emp_nm
   			 ,e.pw
   			 ,e.dept_cd
  			 ,(SELECT d.dept_nm FROM department d WHERE d.dept_cd = e.dept_cd) AS dept_nm
   			 ,e.position_cd
    		 ,(SELECT c.cmm_nm FROM cmm_code c 
    				 WHERE c.cmm_class = 'POSITION_CD' AND c.cmm_cd = e.position_cd) AS position_nm
     
   			 ,NVL((
       			    SELECT LISTAGG(i.auth_nm, ',') WITHIN GROUP (ORDER BY i.auth_cd)
       				FROM employee_auth a
        			JOIN auth_info i ON a.auth_cd = i.auth_cd
       			    WHERE a.emp_no = e.emp_no
   			 ), '없음') AS currentAuth

			FROM employee e
			<if test="whatColumn == 'emp_nm'">
			where e.emp_nm like #{keyword}
			</if>
			<if test="whatColumn == 'dept_nm'">
			where e.dept_nm like #{keyword}
			</if>
			ORDER BY e.emp_no


	</select>

	<select id="getTotalCount" resultType="int">
		select count(*) from employee
		<if test="whatColumn == 'emp_nm'">
			where emp_nm like #{keyword}
		</if>
		<if test="whatColumn == 'emp_no'">
			where emp_no like #{keyword}
		</if>
	</select>
	<select id="getOneEmp" resultType="employee.model.EmployeeBean">
		select
		e.emp_no
		,e.emp_nm
		,e.emp_status
		,(select c.cmm_nm from cmm_code c where
		c.cmm_class='EMP_STATUS' and c.cmm_cd
		= e.emp_status) as emp_status_nm
		,e.dept_cd
		,(select d.dept_nm from department d where d.dept_cd =
		e.dept_cd) as dept_nm
		,e.position_cd
		,(select c.cmm_nm from cmm_code c
		where c.cmm_class = 'POSITION_CD' and
		c.cmm_cd = e.position_cd) as
		position_nm
		,e.hire_date
		,e.gender
		,(select c.cmm_nm from cmm_code c
		where c.cmm_class='GENDER' and c.cmm_cd =
		e.gender) as gender_nm
		,e.birth
		,e.email
		from employee e
		where e.emp_no = #{emp_no}
	</select>


	<update id="updateEmployee">
		update employee set
		emp_nm = #{emp_nm}, dept_cd =
		#{dept_cd},position_cd =
		#{position_cd},hire_date = #{hire_date},gender
		= #{gender},birth =
		#{birth},email = #{email},pw=#{pw}
		where emp_no =
		#{emp_no}
	</update>

	<select id="checkEmployee" resultType="int">
		select count(*) from
		employee
		where emp_no = #{emp_no} and email=#{email}

	</select>
	<update id="updatePassword">
		UPDATE employee SET pw = #{newPw}
		WHERE emp_no =
		#{emp_no}
	</update>

	<update id="updateAnnualLeave" parameterType="map">
		UPDATE employee
		SET
		annual_leave = annual_leave - #{total_days}
		WHERE emp_no = #{emp_no}
	</update>

	<select id="getEmployeeLeave" parameterType="string"
		resultType="employee.model.EmployeeBean">
		SELECT emp_no, annual_leave
		FROM employee
		WHERE emp_no = #{emp_no}
	</select>

	<!-- 전체 사원의 연차 정보 조회 -->
	<select id="getAllEmployeeVacation"
		resultType="employee.model.EmployeeBean">
		SELECT emp_no, emp_nm, annual_leave
		FROM employee
		ORDER BY emp_no ASC
	</select>
</mapper>